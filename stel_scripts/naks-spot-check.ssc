
// stellarium script to spot check sampled nakshatra positions in datasets
[ // sensitive sample
['N03-Kri', 'η Tau', -1100, 17.003, 0.33299999999997],
['N04-Roh', 'α Tau', -1900, 15.719000000000001, 0.9510000000000218],
['N05-Mrg', 'λ Ori', -2450, 22.115, 7.884999999999991],
['N06-Ard', 'γ Gem', -1600, 49.203, 0.0],
['N10-Mag', 'ζ Leo', -200, 116.931, 6.930999999999983],
['N12-UPal', 'β Leo', -2400, 111.118, 12.211999999999989],
['N13-Has', 'δ Crv', -850, 154.083, 4.08299999999997],
['N17-Anu', 'δ Sco', -2350, 182.387, 7.6129999999999995],
['N19-Mul', 'κ Sco', -1600, 216.606, 0.06399999999996453],
['N20-PAsh', 'λ Sgr', -1250, 231.32, 0.0],
['N20-PAsh', 'λ Sgr', -650, 239.583, 0.0],
['N20-PAsh', 'λ Sgr', -50, 247.86700000000002, 4.537000000000035],
['N21-UAsh', 'τ Sgr', -1650, 234.4, 8.930000000000007],
['N22-Shr', 'β Del', -1850, 263.107, 0.0],
['N23-Dha', 'β Aqr', -100, 294.23400000000004, 10.904000000000053],
['N24-Sha', 'λ Aqr', -950, 300.618, 3.947999999999979],
['N26-UBha', 'λ Peg', 300, 329.505, 6.175000000000011],
['N27-Rev', 'ε Psc', -2150, 320.16, 3.169999999999959],
['N27-Rev', 'ε Psc', -350, 344.926, 8.255999999999972],
['N02-Bha', '41 Ari', -2300, 348.736, 1.26400000000001],
['N03-Kri', 'η Tau', -250, 28.738000000000003, 12.067999999999984],

// rni sample
['N11-PPal', 'δ Leo', -2000, 105.588, 4.412000000000035],
['N12-UPal', 'β Leo', -2100, 115.21, 8.120000000000005],
['N12-UPal', 'β Leo', -1150, 128.19899999999998, 0.0],
['N16-Vis', 'α2 Lib', -2350, 164.985, 11.684999999999945],
['N17-Anu', 'δ Sco', 50, 215.465, 12.134999999999991],
['N18-Jye', 'ε Sco', 100, 229.206, 12.536000000000001],
['N24-Sha', 'λ Aqr', -1100, 298.548, 1.877999999999986],
['N27-Rev', 'ε Psc', -2200, 319.475, 3.8549999999999613],
['N21-UAsh', 'τ Sgr', -1100, 241.952, 1.3780000000000427],
['N21-UAsh', 'τ Sgr', 50, 257.798, 1.127999999999986],
['N21-UAsh', 'τ Sgr', 100, 258.48900000000003, 1.8190000000000168],
['N22-Shr', 'α Aql', -650, 264.563, 0.0],
['N22-Shr', 'α Aql', -100, 272.259, 2.2590000000000146],
['N24-Sha', 'λ Aqr', -2300, 282.033, 1.2969999999999686],
['N24-Sha', 'λ Aqr', 500, 320.692, 24.02199999999999],
['N25-PBha', 'α Peg', 150, 327.824, 17.824000000000012],
['N26-UBha', 'λ Peg', -800, 314.35, 0.0],
['N27-Rev', 'ε Psc', -350, 344.926, 8.255999999999972],
['N09-Asl', 'ζ Hya', -650, 97.89, 1.2200000000000273],
['N09-Asl', 'ζ Hya', -550, 99.26799999999999, 2.5979999999999563],
['N09-Asl', 'ζ Hya', 400, 112.383, 15.712999999999965],

// abhyankar sample
['N13-Has', 'γ Crv', -1600, 141.12, 0.0],
['N17-Anu', 'δ Sco', 400, 220.31599999999997, 16.98599999999999],
['N19-Mul', 'λ Sco', -1600, 214.71200000000002, 1.95799999999997],
['N19-Mul', 'λ Sco', -1200, 220.217, 0.0],
['N24-Sha', 'α PsA', -1500, 284.98400000000004, 0.0],
['N24-Sha', 'α PsA', -1100, 290.535, 0.0],
['N25-PBha', 'α Peg', -1700, 302.348, 0.0],
['N22-Shr', 'β Del', -2050, 260.361, 0.0],
['N22-Shr', 'β Del', -1200, 272.04200000000003, 2.04200000000003],
['N23-Dha', 'β Aqr', 250, 299.078, 15.74799999999999],
['N23-Dha', 'β Aqr', 500, 302.543, 19.213000000000022],
['N24-Sha', 'α PsA', -1550, 284.291, 0.0],
['N24-Sha', 'α PsA', 50, 306.54400000000004, 9.874000000000024],
['N25-PBha', 'α Peg', -1900, 299.605, 0.0],
['N26-UBha', 'λ Peg', -2400, 292.423, 17.576999999999998],
['N26-UBha', 'λ Peg', 300, 329.505, 6.175000000000011],
['N27-Rev', 'ζ Psc', -1150, 336.093, 0.0]
].forEach ( function (x) {
       n = x[1]
       d = x[2] + '-12-31T00:00:00'
       l = x[3]
       

       core.setDate(d); core.wait(1)
       oi = core.getObjectInfo(n)
       //core.debug(d)
       core.debug([ Math.round(oi.elong-l,2), d,  n , oi.elong, l]. join(" -- "))
       core.wait(.5)
})


// def spot_check():
//   rni = n27Feb24[ 
//     ( n27Feb24.year < 10000) 
//     # (n27Feb24.gname == 'β Del') & (n27Feb24.err_lon_bounds_eq < 2) 
//     # (n27Feb24.nid == 'N23-Dha') & (n27Feb24.err_lon_bounds_eq < 2)
//     # (n27Feb24.err_lon_bounds_eq < 2)
//     #(abs(n27Feb24.lon - 270) < 1)
//     ][
//       ['nid','gname', 'year', 'lon', 'err_lon_bounds_eq']
//       ].sort_values(['nid', 'year'])

//   sens = n27Feb24_sensitivity [ 
//     ( n27Feb24_sensitivity.year < 10000) 
//     # (n27Feb24_sensitivity.gname == 'β Del') & (n27Feb24_sensitivity.err_lon_bounds_eq < 2) 
//     # (n27Feb24_sensitivity.nid == 'N23-Dha') & (n27Feb24_sensitivity.err_lon_bounds_eq < 2) 
//     # (n27Feb24_sensitivity.err_lon_bounds_eq < 2) 
//     # (abs (n27Feb24_sensitivity.lon -270) < 1)
//     ][
//       ['nid','gname', 'year', 'lon', 'err_lon_bounds_eq']
//       ].sort_values(['nid', 'year'])


//   abh = n27Feb24_abhyankar [ 
//     ( n27Feb24_abhyankar.year < 10000) 
//     # (n27Feb24_sensitivity.gname == 'β Del') & (n27Feb24_sensitivity.err_lon_bounds_eq < 2) 
//     # (n27Feb24_abhyankar.nid == 'N23-Dha') & (n27Feb24_abhyankar.err_lon_bounds_eq < 2) 
//     # (n27Feb24_abhyankar.err_lon_bounds_eq < 2) 
//     # (abs(n27Feb24_abhyankar.lon - 270) <1)
//     ][
//       ['nid','gname', 'year', 'lon', 'err_lon_bounds_eq']
//       ].sort_values(['nid', 'year'])

//   ans = sens.sample(10).sort_values(['nid','gname','year']).apply(lambda x: x.tolist(), axis=1).tolist(
//   ) + sens[sens.nid.apply(lambda x: bool(re.match("^.*(2\d).*$",str(x))))].sample(10).sort_values(['nid','gname','year']).apply(lambda x: x.tolist(), axis=1).tolist(  
//   ) + rni.sample(10).sort_values(['nid','gname','year']).apply(lambda x: x.tolist(), axis=1).tolist(
//   ) + rni[rni.nid.apply(lambda x: bool(re.match("^.*(2\d).*$",str(x))))].sample(10).sort_values(['nid','gname','year']).apply(lambda x: x.tolist(), axis=1).tolist(  
//   ) + abh.sample(10).sort_values(['nid','gname','year']).apply(lambda x: x.tolist(), axis=1).tolist(
//   ) + abh[abh.nid.apply(lambda x: bool(re.match("^.*(2\d).*$",str(x))))].sample(10).sort_values(['nid','gname','year']).apply(lambda x: x.tolist(), axis=1).tolist(  
//   )
//   display(ans)

// spot_check()